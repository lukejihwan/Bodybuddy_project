<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Report">
	<resultMap type="Report" id="reportMap">
		<id column="report_idx" property="report_idx"/>
		<result column="title" property="title"/>
		<result column="content" property="content"/>
		<result column="regdate" property="regdate"/>
		<result column="status" property="status"/>
		<association 
			property="member" 
			column="member_idx" 
			javaType="Member" 
			select="Member.selectByIdx"/>
		<collection 
			property="report_reply"
			column="report_idx"
			javaType="ReportReply"
			select="ReportReply.selectByReport"/>
	</resultMap>
	
	<select id="selectTotal" parameterType="int" resultType="int">
		select count(*) as total from report where member_idx = #{member.member_idx}
	</select>

   	<select id="selectByMember" parameterType="Map" resultMap="reportMap">
		SELECT *  FROM (
		 SELECT ROW_NUMBER() OVER (ORDER BY report_idx DESC) AS ROWNUM, report_idx, member_idx, title, content, regdate, status FROM report 
		 where member_idx = #{member.member_idx} ORDER BY report_idx DESC
		 ) report 
		WHERE ROWNUM BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 보안을 위해 조회는 member_idx가 들어가야한다 -->
	<select id="select" parameterType="int" resultMap="reportMap">
		select * from report where report_idx = #{report_idx}
	</select>

	<insert id="insert" parameterType="Report">
		insert into report(member_idx, title, content) values(#{member.member_idx}, #{title}, #{content})
	</insert>

	<update id="update" parameterType="Report">
		update report set title=#{title}, content=#{content} where report_idx = #{report_idx}
	</update>
	
	<delete id="delete" parameterType="Report">
		delete from report where report_idx = #{report_idx}
	</delete>
</mapper>